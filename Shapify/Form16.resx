<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        p/UBEiGLZAAAAABJRU5ErkJggg==
</value>
  </data>
</root>