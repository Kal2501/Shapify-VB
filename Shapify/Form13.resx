<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        MGU7jAsu+H/NUo+LIgtmLAAAAABJRU5ErkJggg==
</value>
  </data>
</root>