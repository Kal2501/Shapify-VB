<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        u8g466z/Bzqa68VEBBSiAAAAAElFTkSuQmCC
</value>
  </data>
</root>